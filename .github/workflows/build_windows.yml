name: Build - Windows

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        default: "Debug"
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Version'
        default: ''
        required: false
        type: string
      build_type:
        description: 'Build Type'
        default: "Debug"
        required: false
        type: string
    secrets:
      SEED_KEY:
        description: 'Key used to complicate the seed string in release builds'
        required: false

env:
  QT_VERSION: 6.8.1
  EXTRA_CMAKE_FLAGS: ""

jobs:
  build-desktop-application-windows:
    name: Build Desktop Application Windows
    runs-on: windows-latest

    steps:
      # Increase page size so that the compiler doesn't
      # run out of memory
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 16GB
          maximum-size: 16GB
          disk-root: "C:"

      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-tags: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          cache: true
          cache-key-prefix: install-qt-${{ env.QT_VERSION }}-action

      - name: Set Debug Flags
        if: inputs.build_type == 'Debug'
        run: echo "EXTRA_CMAKE_FLAGS=-DENABLE_DEBUG=True ${{ env.EXTRA_CMAKE_FLAGS }}" >> $env:GITHUB_ENV

      - name: Set Release Flags
        if: inputs.build_type == 'Release' && inputs.version != ''
        run: echo "EXTRA_CMAKE_FLAGS=-DRELEASE_TAG=${{ inputs.version }} ${{ env.EXTRA_CMAKE_FLAGS }}" >> $env:GITHUB_ENV

      - name: Configure CMake
        working-directory: ${{ github.workspace }}
        env:
          SEED_KEY: ${{ secrets.SEED_KEY }}
        run: cmake -B build -DGITHUB_WORKFLOW=True -DQT_GUI=True -DEMBED_DATA=True "${{ env.EXTRA_CMAKE_FLAGS }}"
        
      - name: Build
        working-directory: ${{ github.workspace }}
        run: cmake --build build --config ${{ inputs.build_type }} -j

      - name: Get Version
        id: get-version
        working-directory: ${{ github.workspace }}/build
        run: |
          echo "RANDO_VERSION=$(((Get-Content version.hpp | Select-String -Pattern '#define RANDOMIZER_VERSION "[0-9\.\-a-z]*"') -Replace '.*("[0-9\.\-a-z]*").*', '$1') -Replace '"', '')" >> $env:GITHUB_OUTPUT
        
      - name: Call windeployqt
        working-directory: ${{ github.workspace }}/build
        shell: cmd # Setting up environment vars only works properly in cmd?
        run: |
          mkdir wwhd_rando_windows
          cp ${{ inputs.build_type }}\wwhd_rando.exe wwhd_rando_windows\wwhd_rando.exe
          cd ${{ github.workspace }}\build\wwhd_rando_windows && windeployqt wwhd_rando.exe --no-translations --no-system-d3d-compiler --no-opengl-sw

      - name: Save Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{github.workspace}}/build/wwhd_rando_windows
          name: wwhd_rando_${{ steps.get-version.outputs.RANDO_VERSION }}_windows
