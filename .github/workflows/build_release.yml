name: Build Release

on:
  release:
    types: [published]

jobs:
  build-windows:
    uses: ./.github/workflows/build_windows.yml
    with:
      version: ${{ github.event.release.tag_name }}
      build_type: Release
    secrets:
      SEED_KEY: ${{ secrets.SEED_KEY }}

  build-wiiu:
    uses: ./.github/workflows/build_wiiu.yml
    with:
      version: ${{ github.event.release.tag_name }}
      build_type: Release
    secrets:
      SEED_KEY: ${{ secrets.SEED_KEY }}
  
  build-mac:
    uses: ./.github/workflows/build_mac.yml
    with:
      version: ${{ github.event.release.tag_name }}
      build_type: Release
    secrets:
      SEED_KEY: ${{ secrets.SEED_KEY }}

  attach-to-release:
    name: Attach To Release
    needs: [build-windows, build-wiiu, build-mac]
    runs-on: ubuntu-latest
 
    steps:
    # Will make the later gh release command work
     - name: Checkout Repository
       uses: actions/checkout@v5

     - name: Create Folder for Windows Files
       run: mkdir wwhd_rando_${{ github.event.release.tag_name }}_windows

     - name: Download Windows Artifact
       uses: actions/download-artifact@v4
       with:
        path: ${{ github.workspace }}/wwhd_rando_${{ github.event.release.tag_name }}_windows
        name: wwhd_rando_${{ github.event.release.tag_name }}_windows # pass name so it doesn't get put in a folder

     - name: Download Wii U Artifact
       uses: actions/download-artifact@v4
       with:
        name: wwhd_rando_${{ github.event.release.tag_name }}.wuhb # pass name so it doesn't get put in a folder
    
     - name: Download Mac OS Artifact
       uses: actions/download-artifact@v4
       with:
        name: wwhd_rando_${{ github.event.release.tag_name }}_mac.dmg # pass name so it doesn't get put in a folder

     - name: Zip windows file
       uses: montudor/action-zip@v1
       with:
         args: zip -qq -r wwhd_rando_${{ github.event.release.tag_name }}_windows.zip wwhd_rando_${{ github.event.release.tag_name }}_windows

     - name: Attach Files
       env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
       run: |
         ls -R
         mv wwhd_rando.dmg wwhd_rando_${{ github.event.release.tag_name }}_mac.dmg
         gh release upload ${{ github.event.release.tag_name }} wwhd_rando_${{ github.event.release.tag_name }}_windows.zip wwhd_rando.wuhb wwhd_rando_${{ github.event.release.tag_name }}_mac.dmg
