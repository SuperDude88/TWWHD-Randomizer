name: Build Desktop App

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type:'
        required: true
        type: choice
        options:
        - Nightly
        - Release

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 6.4.2
  BUILD_TYPE: Release

jobs:
  get-changelog:
    name: Retrieve Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Last Nightly
        id: nightly-version
        run: |
          echo "last_nightly=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          base-ref: ${{ env.last_nightly }}
    # outputs:
    #   changelog: ${{ steps.changelog.outputs.changelog }}
    #   last-nightly: ${{ env.last_nightly }}

  build-desktop-application-windows:
   name: Build Desktop Application Windows
   needs: get-changelog
   runs-on: windows-latest
   
   steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    # For windows powershell
    - name: Set variables
      working-directory: ${{ github.workspace }}
      run: |
        echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 7))" >> $env:GITHUB_ENV
        echo "RANDO_VERSION=$(((Get-Content CMakeLists.txt | Select-String -Pattern 'RANDOMIZER_VERSION="[0-9\.a-z]*"') -Replace '.*("[0-9\.a-z]*").*', '$1') -Replace '"', '')" >> $env:GITHUB_ENV

    - name: Insert commit hash into Cmake file
      working-directory: ${{ github.workspace }}
      run: ((Get-Content -Path gui/CMakeLists.txt -Raw) -replace 'develop','${{env.SHORT_SHA}}') | Set-Content -Path gui/CMakeLists.txt

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        cache: true
        cache-key-prefix: install-qt-${{env.QT_VERSION}}-action
        
    - name: Configure CMake
      run: cmake ${{github.workspace}}/gui -B ${{github.workspace}}/build -DGITHUB_WORKFLOW=True -DEMBED_DATA=True
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j
      
    - name: Call windeployqt
      working-directory: ${{github.workspace}}/build/Release
      run: windeployqt wwhd_rando.exe --pdb --release --no-translations --no-system-d3d-compiler --no-opengl-sw
    
    - name: Populate artifact folders
      run: |
        mkdir artifacts/windows
        cp ${{github.workspace}}/build/Release/* -r ${{github.workspace}}/artifacts/windows

    - if: ${{ github.event.inputs.build_type == 'Nightly' }}  
      name: Save ZIP Archive Nightly
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        path: ${{github.workspace}}/artifacts/windows
        filename: 'wwhd_rando_${{env.RANDO_VERSION}}-${{env.SHORT_SHA}}_windows.zip'

    - if: ${{ github.event.inputs.build_type == 'Nightly' }}
      name: Create Nightly Pre-release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        artifacts: 'wwhd_rando_${{env.RANDO_VERSION}}-${{env.SHORT_SHA}}_windows.zip'
        prerelease: true
        commit: ${{ github.sha }}
        tag: "Nightly-${{ env.SHORT_SHA }}"
        name: "Nightly-${{ env.SHORT_SHA }}"
        body: |
          Please note that these are development builds and may not be entirely stable.

          Changes Since [${{ needs.get-changelog.outputs.last-nightly }}](https://github.com/${{ github.repository }}/releases/tag/${{ needs.get-changelog.outputs.last-nightly }}) ðŸ› :  
          ${{ needs.get-changelog.outputs.changelog }}


    - if: ${{ github.event.inputs.build_type == 'Release' }}  
      name: Save ZIP Archive Release
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        path: ${{github.workspace}}/artifacts/windows
        filename: 'wwhd_rando_${{env.RANDO_VERSION}}_windows.zip'

    - if: ${{ github.event.inputs.build_type == 'Release' }}
      name: Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        artifacts: 'wwhd_rando_${{env.RANDO_VERSION}}_windows.zip'
        prerelease: false
        commit: ${{ github.sha }}
        tag: "${{ env.RANDO_VERSION }}"
        name: "${{ env.RANDO_VERSION }}"

