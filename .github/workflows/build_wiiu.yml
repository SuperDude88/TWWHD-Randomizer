name: Build - Wii U

on:
  workflow_call:
    inputs:
      version:
        description: 'Version'
        default: ''
        required: false
        type: string
      build_type:
        description: 'Build Type'
        default: "Debug"
        required: false
        type: string

env:
  EXTRA_CMAKE_FLAGS: ""

jobs:
  build-wiiu-homebrew-application:
    name: Build Wii U Homebrew Application
    runs-on: ubuntu-latest

    steps:
      - name: Install devkitPPC
        run: |
          wget https://apt.devkitpro.org/install-devkitpro-pacman
          chmod +x ./install-devkitpro-pacman
          sudo ./install-devkitpro-pacman
          yes | sudo --preserve-env dkp-pacman -Scc
          sudo --preserve-env dkp-pacman -Syyu --noconfirm wiiu-dev
          sudo --preserve-env dkp-pacman -S --needed ppc-portlibs wiiu-portlibs
          sudo --preserve-env dkp-pacman -S --needed devkitARM
          yes | sudo --preserve-env dkp-pacman -Scc

      - name: Checkout wut
        uses: actions/checkout@v3
        with:
          repository: devkitPro/wut
          ref: cb9046e776ca89b5ae041e74d6fb05d11989cbef
          path: wut
      - name: Install wut
        working-directory: ${{ github.workspace }}/wut
        run: |
          export DEVKITPRO=/opt/devkitpro
          export DEVKITARM=${DEVKITPRO}/devkitARM
          export DEVKITPPC=${DEVKITPRO}/devkitPPC
          make -j$(nproc)
          sudo --preserve-env make install

      - name: Checkout libmocha
        uses: actions/checkout@v3
        with:
          repository: wiiu-env/libmocha
          ref: 049f322e55301e64c90565cace922187f6a1c03a
          path: libmocha
      - name: Install libmocha
        working-directory: ${{ github.workspace }}/libmocha
        run: |
          export DEVKITPRO=/opt/devkitpro
          export DEVKITARM=${DEVKITPRO}/devkitARM
          export DEVKITPPC=${DEVKITPRO}/devkitPPC
          make -j$(nproc)
          sudo --preserve-env make install
          mv /opt/devkitpro/wut/usr/include/* /opt/devkitpro/wut/include/ # Hack to put the include/lib file into DKP/wut's native search directories

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set Debug Flags
        if: inputs.build_type == 'Debug'
        run: echo "EXTRA_CMAKE_FLAGS=${{ env.EXTRA_CMAKE_FLAGS }} -DENABLE_DEBUG=True" >> $GITHUB_ENV
 
      - name: Set Release Flags
        if: inputs.build_type == 'Release' && inputs.version != ''
        run: echo "EXTRA_CMAKE_FLAGS=${{ env.EXTRA_CMAKE_FLAGS }} -DRELEASE_TAG=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Build
        run: |
          export DEVKITPRO=/opt/devkitpro
          export DEVKITARM=${DEVKITPRO}/devkitARM
          export DEVKITPPC=${DEVKITPRO}/devkitPPC
          /opt/devkitpro/portlibs/wiiu/bin/powerpc-eabi-cmake -B build ${{ env.EXTRA_CMAKE_FLAGS }}
          cd build
          make -j$(nproc)

      - name: Get Version
        id: get-version
        shell: pwsh
        working-directory: ${{ github.workspace }}/build
        run: |
          echo "RANDO_VERSION=$(((Get-Content version.hpp | Select-String -Pattern '#define RANDOMIZER_VERSION "[0-9\.a-z]*"') -Replace '.*("[0-9\.a-z]*").*', '$1') -Replace '"', '')" >> $env:GITHUB_OUTPUT

      - name: Save Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{github.workspace}}/build/wwhd_rando.wuhb
          name: wwhd_rando_${{ steps.get-version.outputs.RANDO_VERSION }}.wuhb
