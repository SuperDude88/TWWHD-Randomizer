cmake_minimum_required(VERSION 3.7)
project(wwhd_rando_patch CXX)
set(CMAKE_CXX_STANDARD 17)
add_compile_options(-Wall)
add_definitions(-DRANDO_ROOT="${CMAKE_SOURCE_DIR}")

if(DEFINED DEVKITPRO)
  include("${DEVKITPRO}/wut/share/wut.cmake" REQUIRED)
  add_definitions(-DDEVKITPRO)
else()
  find_package(Threads REQUIRED)
endif()

if(WIN32)
  # in windows case, we bundle a zlib static library
  set(ZLIB_LIBRARY "${CMAKE_SOURCE_DIR}/libs/zlib_win/zlibstat.lib")
  set(ZLIB_INCLUDE_DIR "libs/zlib_win")
  add_library(zlib STATIC IMPORTED)
  set_target_properties(zlib PROPERTIES IMPORTED_LOCATION ${ZLIB_LIBRARY})
else()
  include(FindPkgConfig)
  pkg_check_modules(ZLIB zlib REQUIRED)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
endif()

if(CMAKE_USE_PTHREADS_INIT)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -Werror")
  set(THREADS_PREFER_PTHREAD_FLAG ON)
endif()

add_executable(wwhd_rando_patch tweaks.cpp)
target_sources(wwhd_rando_patch PRIVATE "randomizer.cpp")
add_subdirectory("server/utility")
add_subdirectory("server/command")
add_subdirectory("server/filetypes")
add_subdirectory("logic")
# we don't build tests for console currently

if(WIN32)
  target_link_libraries(wwhd_rando_patch zlib)
  target_include_directories(wwhd_rando_patch PRIVATE ${ZLIB_INCLUDE_DIR})
else()
  target_link_libraries(wwhd_rando_patch ${ZLIB_LDFLAGS})
  target_compile_options(wwhd_rando_patch PRIVATE ${ZLIB_CFLAGS})
endif()
if(DEFINED DEVKITPRO)
  target_link_libraries(wwhd_rando_patch iosuhax)
endif()
if(CMAKE_USE_PTHREADS_INIT)
  target_link_libraries(wwhd_rando_patch Threads::Threads)
endif()

if(DEFINED DEVKITPRO)
  wut_create_rpx(wwhd_rando_patch)
endif()
