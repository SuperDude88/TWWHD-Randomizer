
if(FILL_TESTING)
  cmake_minimum_required(VERSION 3.7)
  if(CMAKE_VERSION VERSION_LESS "3.13")
    if (POLICY CMP0076)
      cmake_policy(SET CMP0076 OLD)
    endif()
  else()
    cmake_policy(SET CMP0076 NEW)
  endif()
  project(assumed_fill_test CXX)
  set(CMAKE_CXX_STANDARD 20)

  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -DJSON_NOEXCEPTION=1 -DJSON_USE_IMPLICIT_CONVERSIONS=1 -Wall")

  if(ENABLE_DEBUG)
    message("Debugging is ON")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_DEBUG")
  endif()

  add_executable(assumed_fill_test main.cpp GameItem.cpp Location.cpp World.cpp ../options.cpp ItemPool.cpp Area.cpp Fill.cpp Random.cpp Search.cpp SpoilerLog.cpp Debug.cpp Dungeon.cpp Generate.cpp Requirements.cpp Entrance.cpp EntranceShuffle.cpp HintRegion.cpp "../server/command/Log.cpp")
elseif(MASS_TESTING)
  cmake_minimum_required(VERSION 3.7)
  if(CMAKE_VERSION VERSION_LESS "3.13")
    if (POLICY CMP0076)
      cmake_policy(SET CMP0076 OLD)
    endif()
  else()
    cmake_policy(SET CMP0076 NEW)
  endif()
  project(mass_test CXX)
  set(CMAKE_CXX_STANDARD 20)

  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -DJSON_NOEXCEPTION=1 -DJSON_USE_IMPLICIT_CONVERSIONS=1 -Wall")

  if(ENABLE_DEBUG)
    message("Debugging is ON")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_DEBUG")
  endif()

  add_executable(mass_test mass_test.cpp GameItem.cpp Location.cpp World.cpp ../options.cpp ItemPool.cpp Area.cpp Fill.cpp Random.cpp Search.cpp SpoilerLog.cpp Debug.cpp Dungeon.cpp Generate.cpp Requirements.cpp Entrance.cpp EntranceShuffle.cpp HintRegion.cpp "../server/command/Log.cpp")
else()
  cmake_minimum_required(VERSION 3.7)
  if(CMAKE_VERSION VERSION_LESS "3.13")
    if (POLICY CMP0076)
      cmake_policy(SET CMP0076 OLD)
    endif()
    target_sources(wwhd_rando PRIVATE "logic/GameItem.cpp" "logic/Location.cpp" "logic/World.cpp" "logic/ItemPool.cpp" "logic/Area.cpp" "logic/Fill.cpp" "logic/Random.cpp" "logic/Search.cpp" "logic/SpoilerLog.cpp" "logic/Dungeon.cpp" "logic/Generate.cpp" "logic/Requirements.cpp" "logic/Entrance.cpp")
  else()
    cmake_policy(SET CMP0076 NEW)
    target_sources(wwhd_rando PRIVATE GameItem.cpp Location.cpp World.cpp ItemPool.cpp Area.cpp Fill.cpp Random.cpp Search.cpp SpoilerLog.cpp Dungeon.cpp Generate.cpp Requirements.cpp Entrance.cpp)
  endif()
endif()
